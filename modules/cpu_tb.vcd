$date
	Fri Jun 26 16:14:55 2015
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module cpu_tb $end
$var wire 6 ! opcode [5:0] $end
$var wire 8 " s1 [7:0] $end
$var wire 8 # s2 [7:0] $end
$var wire 8 $ s3 [7:0] $end
$var wire 8 % s4 [7:0] $end
$var wire 1 & z $end
$var reg 1 ' clk $end
$var reg 8 ( e1 [7:0] $end
$var reg 8 ) e2 [7:0] $end
$var reg 8 * e3 [7:0] $end
$var reg 8 + e4 [7:0] $end
$var reg 1 , reset $end
$scope module cpu_ $end
$var wire 1 - clk $end
$var wire 8 . data_in [7:0] $end
$var wire 8 / data_mem [7:0] $end
$var wire 8 0 data_reg [7:0] $end
$var wire 4 1 e1 [3:0] $end
$var wire 4 2 e2 [3:0] $end
$var wire 2 3 e3 [1:0] $end
$var wire 8 4 e4 [7:0] $end
$var wire 2 5 id_in [1:0] $end
$var wire 2 6 id_out [1:0] $end
$var wire 3 7 op [2:0] $end
$var wire 6 8 opcode [5:0] $end
$var wire 1 9 reset $end
$var wire 1 : rst $end
$var wire 1 ; rwe1 $end
$var wire 1 < rwe2 $end
$var wire 1 = rwe3 $end
$var wire 1 > rwe4 $end
$var wire 8 ? s1 [7:0] $end
$var wire 8 @ s2 [7:0] $end
$var wire 8 A s3 [7:0] $end
$var wire 8 B s4 [7:0] $end
$var wire 1 C s_es $end
$var wire 1 D s_rel $end
$var wire 1 E s_ret $end
$var wire 1 F sec $end
$var wire 1 G sinc $end
$var wire 1 H sinm $end
$var wire 1 I swe $end
$var wire 1 J we3 $end
$var wire 1 & z $end
$scope module uc_ $end
$var wire 1 - clock $end
$var wire 2 K id_out [1:0] $end
$var wire 3 L op [2:0] $end
$var wire 6 M opcode [5:0] $end
$var wire 1 : reset $end
$var wire 1 & z $end
$var reg 1 N rwe1 $end
$var reg 1 O rwe2 $end
$var reg 1 P rwe3 $end
$var reg 1 Q rwe4 $end
$var reg 1 R s_es $end
$var reg 1 S s_inc $end
$var reg 1 T s_inm $end
$var reg 1 U s_rel $end
$var reg 1 V s_ret $end
$var reg 1 W sec $end
$var reg 1 X swe $end
$var reg 1 Y we3 $end
$upscope $end
$scope module microc_ $end
$var wire 8 Z alu_mux2 [7:0] $end
$var wire 1 - clk $end
$var wire 8 [ data_in [7:0] $end
$var wire 8 \ data_mem [7:0] $end
$var wire 8 ] data_reg [7:0] $end
$var wire 2 ^ id_in [1:0] $end
$var wire 2 _ id_out [1:0] $end
$var wire 16 ` memprog [15:0] $end
$var wire 10 a mux1_pc [9:0] $end
$var wire 8 b mux2_out [7:0] $end
$var wire 10 c mux4_sum [9:0] $end
$var wire 10 d mux5_pc [9:0] $end
$var wire 10 e mux_subreg [9:0] $end
$var wire 3 f op [2:0] $end
$var wire 6 g opcode [5:0] $end
$var wire 10 h pc_memprog [9:0] $end
$var wire 8 i rd1 [7:0] $end
$var wire 8 j rd2 [7:0] $end
$var wire 1 : reset $end
$var wire 1 C s_es $end
$var wire 1 G s_inc $end
$var wire 1 H s_inm $end
$var wire 1 D s_rel $end
$var wire 1 E s_ret $end
$var wire 10 k sub_mux5 [9:0] $end
$var wire 10 l sum_mux1 [9:0] $end
$var wire 1 I swe $end
$var wire 8 m wd3 [7:0] $end
$var wire 1 J we3 $end
$var wire 1 & z $end
$var wire 1 n zero $end
$scope module mux1_ $end
$var wire 10 o d0 [9:0] $end
$var wire 10 p d1 [9:0] $end
$var wire 1 G s $end
$var wire 10 q y [9:0] $end
$upscope $end
$scope module PC_ $end
$var wire 1 - clk $end
$var wire 10 r d [9:0] $end
$var wire 1 : reset $end
$var reg 10 s q [9:0] $end
$upscope $end
$scope module sumador_ $end
$var wire 10 t a [9:0] $end
$var wire 10 u b [9:0] $end
$var wire 10 v y [9:0] $end
$upscope $end
$scope module memoria_ $end
$var wire 10 w a [9:0] $end
$var wire 1 - clk $end
$var wire 16 x rd [15:0] $end
$upscope $end
$scope module banco_ $end
$var wire 1 - clk $end
$var wire 4 y ra1 [3:0] $end
$var wire 4 z ra2 [3:0] $end
$var wire 8 { rd1 [7:0] $end
$var wire 8 | rd2 [7:0] $end
$var wire 4 } wa3 [3:0] $end
$var wire 8 ~ wd3 [7:0] $end
$var wire 1 J we3 $end
$upscope $end
$scope module alu_ $end
$var wire 8 !" a [7:0] $end
$var wire 8 "" b [7:0] $end
$var wire 3 #" op [2:0] $end
$var wire 8 $" y [7:0] $end
$var wire 1 n zero $end
$var reg 8 %" s [7:0] $end
$upscope $end
$scope module mux2_ $end
$var wire 8 &" d0 [7:0] $end
$var wire 8 '" d1 [7:0] $end
$var wire 1 H s $end
$var wire 8 (" y [7:0] $end
$upscope $end
$scope module ffzero $end
$var wire 1 - clk $end
$var wire 1 n d $end
$var wire 1 : reset $end
$var reg 1 )" q $end
$upscope $end
$scope module mux3_ $end
$var wire 8 *" d0 [7:0] $end
$var wire 8 +" d1 [7:0] $end
$var wire 1 C s $end
$var wire 8 ," y [7:0] $end
$upscope $end
$scope module mux4_ $end
$var wire 10 -" d0 [9:0] $end
$var wire 10 ." d1 [9:0] $end
$var wire 1 D s $end
$var wire 10 /" y [9:0] $end
$upscope $end
$scope module sub_reg $end
$var wire 10 0" d [9:0] $end
$var wire 1 : reset $end
$var wire 1 I swe $end
$var reg 10 1" q [9:0] $end
$upscope $end
$scope module mux5_ $end
$var wire 10 2" d0 [9:0] $end
$var wire 10 3" d1 [9:0] $end
$var wire 1 E s $end
$var wire 10 4" y [9:0] $end
$upscope $end
$scope module sumador2 $end
$var wire 10 5" a [9:0] $end
$var wire 10 6" b [9:0] $end
$var wire 10 7" y [9:0] $end
$upscope $end
$upscope $end
$scope module e_s_ $end
$var wire 1 - clk $end
$var wire 8 8" data_in [7:0] $end
$var wire 8 9" data_mem [7:0] $end
$var wire 8 :" data_reg [7:0] $end
$var wire 2 ;" id_in [1:0] $end
$var wire 2 <" id_out [1:0] $end
$var wire 8 =" in1 [7:0] $end
$var wire 8 >" in2 [7:0] $end
$var wire 8 ?" in3 [7:0] $end
$var wire 8 @" in4 [7:0] $end
$var wire 8 A" mux_reg1 [7:0] $end
$var wire 8 B" mux_reg2 [7:0] $end
$var wire 8 C" mux_reg3 [7:0] $end
$var wire 8 D" mux_reg4 [7:0] $end
$var wire 8 E" out1 [7:0] $end
$var wire 8 F" out2 [7:0] $end
$var wire 8 G" out3 [7:0] $end
$var wire 8 H" out4 [7:0] $end
$var wire 1 : reset $end
$var wire 1 ; rwe1 $end
$var wire 1 < rwe2 $end
$var wire 1 = rwe3 $end
$var wire 1 > rwe4 $end
$var wire 1 F sec $end
$scope module mux_entrada $end
$var wire 8 I" d0 [7:0] $end
$var wire 8 J" d1 [7:0] $end
$var wire 8 K" d2 [7:0] $end
$var wire 8 L" d3 [7:0] $end
$var wire 2 M" s [1:0] $end
$var wire 8 N" y [7:0] $end
$var reg 8 O" aux [7:0] $end
$upscope $end
$scope module mux_salida $end
$var wire 8 P" aux [7:0] $end
$var wire 8 Q" e0 [7:0] $end
$var wire 8 R" e1 [7:0] $end
$var wire 2 S" reg_ [1:0] $end
$var wire 1 F s $end
$var reg 8 T" d0 [7:0] $end
$var reg 8 U" d1 [7:0] $end
$var reg 8 V" d2 [7:0] $end
$var reg 8 W" d3 [7:0] $end
$upscope $end
$scope module sal1 $end
$var wire 1 - clk $end
$var wire 8 X" d [7:0] $end
$var wire 1 : reset $end
$var wire 1 ; rwe $end
$var reg 8 Y" q [7:0] $end
$upscope $end
$scope module sal2 $end
$var wire 1 - clk $end
$var wire 8 Z" d [7:0] $end
$var wire 1 : reset $end
$var wire 1 < rwe $end
$var reg 8 [" q [7:0] $end
$upscope $end
$scope module sal3 $end
$var wire 1 - clk $end
$var wire 8 \" d [7:0] $end
$var wire 1 : reset $end
$var wire 1 = rwe $end
$var reg 8 ]" q [7:0] $end
$upscope $end
$scope module sal4 $end
$var wire 1 - clk $end
$var wire 8 ^" d [7:0] $end
$var wire 1 : reset $end
$var wire 1 > rwe $end
$var reg 8 _" q [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx _"
bx ^"
bx ]"
bx \"
bx ["
bx Z"
bx Y"
bx X"
bx W"
bx V"
bx U"
bx T"
bx S"
bx R"
bx Q"
bx P"
bx O"
bx N"
bx M"
b10000000 L"
b1 K"
b11 J"
b11 I"
bx H"
bx G"
bx F"
bx E"
bx D"
bx C"
bx B"
bx A"
b10000000 @"
b1 ?"
b11 >"
b11 ="
bx <"
bx ;"
bx :"
bx 9"
bx 8"
bx 7"
bx 6"
b1 5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
b1 /"
bx ."
b1 -"
bx ,"
bx +"
bx *"
x)"
bx ("
bx '"
bx &"
bx %"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
bx x
bx w
bx v
bx u
b1 t
bx s
bx r
bx q
bx p
bx o
xn
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
b1 c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
1Y
0X
0W
0V
0U
0T
1S
0R
0Q
0P
0O
0N
bx M
bx L
bx K
1J
0I
0H
1G
0F
0E
0D
0C
bx B
bx A
bx @
bx ?
0>
0=
0<
0;
0:
19
bx 8
bx 7
bx 6
bx 5
b10000000 4
b1 3
b11 2
b11 1
bx 0
bx /
bx .
1-
1,
b10000000 +
b1 *
b11 )
b11 (
1'
x&
bx %
bx $
bx #
bx "
bx !
$end
#500
b0 m
b0 ~
b0 ,"
1n
b0 b
b0 ("
b0 *"
b0 %"
b0 Z
b0 $"
b0 &"
b1 d
b1 r
b1 4"
b0 j
b0 |
b0 ""
b0 i
b0 {
b0 !"
b0 0
b0 ]
b0 :"
b0 R"
b11 O"
b11 .
b11 [
b11 +"
b11 8"
b11 N"
b0 U"
b0 B"
b0 Z"
b0 P"
b10 7
b10 L
b10 f
b10 #"
b1 a
b1 q
b1 2"
b101000000 ."
b0 '"
b101 }
b0 z
b0 y
b101000000 o
b0 5
b0 ^
b0 ;"
b0 M"
b1 6
b1 K
b1 _
b1 <"
b1 S"
b0 /
b0 \
b0 9"
b0 Q"
b1010 !
b1010 8
b1010 M
b1010 g
b0 _"
b0 %
b0 B
b0 H"
b0 ]"
b0 $
b0 A
b0 G"
b0 ["
b0 #
b0 @
b0 F"
b0 Y"
b0 "
b0 ?
b0 E"
b0 1"
b0 k
b0 3"
0)"
0&
b0 s
b1 l
b1 p
b1 v
b101000000001010 `
b101000000001010 x
b1 e
b1 0"
b1 7"
b0 h
b0 u
b0 w
b0 6"
0Y
0J
1:
0,
09
#2000
0'
0-
#8000
1'
1-
#10000
0'
0-
#16000
1'
1-
#18000
0'
0-
#24000
1'
1-
#26000
0'
0-
#32000
1'
1-
#34000
0'
0-
#40000
1'
1-
#42000
0'
0-
#48000
1'
1-
#50000
0'
0-
#56000
1'
1-
#58000
0'
0-
#64000
1'
1-
#66000
0'
0-
#72000
1'
1-
#74000
0'
0-
#80000
1'
1-
#82000
0'
0-
#88000
1'
1-
#90000
0'
0-
#96000
1'
1-
#98000
0'
0-
#104000
1'
1-
#106000
0'
0-
#112000
1'
1-
#114000
0'
0-
#120000
1'
1-
#122000
0'
0-
#128000
1'
1-
#130000
0'
0-
#136000
1'
1-
#138000
0'
0-
#144000
1'
1-
#146000
0'
0-
#152000
1'
1-
#154000
0'
0-
#160000
1'
1-
#162000
0'
0-
#168000
1'
1-
#170000
0'
0-
#176000
1'
1-
#178000
0'
0-
#184000
1'
1-
#186000
0'
0-
#192000
1'
1-
#194000
0'
0-
#200000
1'
1-
#202000
0'
0-
#208000
1'
1-
#210000
0'
0-
#216000
1'
1-
#218000
0'
0-
#224000
1'
1-
#226000
0'
0-
#232000
1'
1-
#234000
0'
0-
#240000
1'
1-
#242000
0'
0-
#248000
1'
1-
#250000
0'
0-
#256000
1'
1-
#258000
0'
0-
#264000
1'
1-
#266000
0'
0-
#272000
1'
1-
#274000
0'
0-
#280000
1'
1-
#282000
0'
0-
#288000
1'
1-
#290000
0'
0-
#296000
1'
1-
#298000
0'
0-
#304000
1'
1-
#306000
0'
0-
#312000
1'
1-
#314000
0'
0-
#320000
1'
1-
#322000
0'
0-
#328000
1'
1-
#330000
0'
0-
#336000
1'
1-
#338000
0'
0-
#344000
1'
1-
#346000
0'
0-
#352000
1'
1-
#354000
0'
0-
#360000
1'
1-
#362000
0'
0-
#368000
1'
1-
#370000
0'
0-
#376000
1'
1-
#378000
0'
0-
#384000
1'
1-
#386000
0'
0-
#392000
1'
1-
#394000
0'
0-
#400000
1'
1-
#402000
0'
0-
#408000
1'
1-
#410000
0'
0-
#416000
1'
1-
#418000
0'
0-
#424000
1'
1-
#426000
0'
0-
#432000
1'
1-
#434000
0'
0-
#440000
1'
1-
#442000
0'
0-
#448000
1'
1-
#450000
0'
0-
#456000
1'
1-
#458000
0'
0-
#464000
1'
1-
#466000
0'
0-
#472000
1'
1-
#474000
0'
0-
#480000
1'
1-
#482000
0'
0-
#488000
1'
1-
#490000
0'
0-
#496000
1'
1-
#498000
0'
0-
#500500
