#asignamos unos opcodes a la suma, resta y multiplicacion
#para compararlos con el operando de entrada
li $5, 0    #operando asignado a la suma (00)       
li $6, 1    #operando asignado a la resta (01)
li $7, 2    #operando asignado a la multiplicacion (10)
li $8, 3    #operando asignado a la division (11)

main:

    lesr $1, @0     #cargamos en registro el primer valor de la e/s
    lesr $2, @1     #cargamos en registro el segundo valor de la e/s
    lesr $3, @2     #cargamos en registro el operador desde la e/s

    sub $4, $3, $5  #comparamos en busca de la suma
    bnez sumar
    
    sub $4, $3, $6  #comparamos en busca de la resta
    bnez restar
    
    sub $4, $3, $7  #comparamos en busca de la multiplicacion
    bnez multiplicar

    sub $4, $3, $8  #comparamos en busca de la division
    bnez dividir 
    
    j main

sumar:

    add $4, $1, $2
    j guardar

restar:

    sub $4, $1, $2
    j guardar

multiplicar:

    move $4, $0
    add $1, $1, $0  # si $1 == 0, no hacer bucle1
    bnez guardar     

bucle1:

    add $4, $4, $2  #repetir tantas veces $1
    sub $1, $1, $6  
    beqz bucle1
    j guardar

dividir:

    move $4, $0
    lest $0, $1, $2     # si el $1 es menor -> z=0, si z igual a cero salir
    beqz guardar         

bucle2:

    add $4, $4, $6  # sumar 1 unidad  
    sub $1, $1, $2
    lest $0, $1, $2     #si es no es menor -> z=1 por lo que repetir
    bnez bucle2

guardar:

    sesr @0, $4 #guardar en el puerto 0 de la e/s el registro 4
    j main